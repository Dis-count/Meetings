核心问题是 如何将给定的解
1. 细节问题 如何在算法中控制|A-A`|改变量是最小的
2. 形式上 \min  \max < = 松弛变量算不算
3. 给定值 如何？
4. 给定解 可行与否？
5. MIP 的问题？

min|c-c'|
s.t. Ax<b
    A^T \pi = c'^T


对于 min cx
      Ax \geq b

d(\lambda) = min_x cx + \lambda(b-Ax)  lower bound

最优值即为 max(d(\lambda))_\lambda 此时对应 \lambda 为最优。同时，此时最优解x_0 满足
当 \lambda \neq 0 时，Ax_0 =b
当 \lambda = 0 时，Ax_0 \leq b

由于拉格朗日乘子法具有优化后 值一定相等的特性
即如果给定真实的 A 则可以得到 真实的 \lambda
由于在次梯度中，存在关于范数的部分，是否可以用来在迭代中改进A，从而得到我们想要的逆优化结果。


可以有这么几种方式： 给定 解和值

当给定值时，若值大于原最优值，则对应的解在可行域外；若值大于原最优值，则对应的解在可行域外；
理论上该给定值对应的解可以在原可行域内。
但存在一个问题，即最终找到的与c平行的该线上均满足给定值的条件，这个时候会不会导致偏离较为严重？

当给定解时，设置一种机制改进 \lambda 的值 因为 x_0 是给定的，同时需要设置A的改变值以得到更好的结果

本质上是一种惩罚，将不符合约束条件的部分进行修改，在拉格朗日中则是修改在原问题和对偶问题中不断循环计算得到 x 值。同时考虑是不是不同的惩罚方式都可以进行修正？

在我们这里，则是更改 A 最终希望修改量是最小的.

对于A_i每一行约束的向量，容易证明，
对于 a_1x_1+a_2x_2=b_1 给定解(x^1,x^2) 则只修改a_1的改变量为 \delta_1 = b_1-a_2x^2/x^1 - a_1, 同理
\delta_2 = b_1-a_1x^1/x^2 - a_2.
两者相减可得 当 x^2 < x^1 \delta_1 < \delta_2.高维类似，只需找到给定解最大的部分对应的系数进行更改即可。但前提是我们知道要更改哪些A_i

如果不知道更改哪些？则需要一个个筛选.

S1：给定模型 max cx Ax<b 其中c A b 为给定值。此时给定一个解x^*,我们需要修改 A 为 A^' 使得
x^* 为修改后模型的最优解。
S2: 此时由于是最优解，故满足强对偶性，即 b^T \pi = c^T x^*=最优解. 可以根据该式产生初始 \pi. 由于 Ax\leq b, \pi \geq 0. 同时若某个式子 inactive 则对应的 \pi_i =0.
S3: 如果要用拉格朗日的次梯度方法，就要以修改 \pi 为主，修改 A 为辅。
S4: 将所有的式子松弛到目标函数上，此时如果利用次梯度方法则得到最优解和相应的\pi
S5:直接利用贪婪算法修改n个等式 过可行解，求此时最优解和相应 \pi 如果最优解不等于给定解对应的值

如果要求改变限制条件的系数不能从正改为负，或是从负改为正，即只能同斜率方向去修改。这个时候对应的给定解要小于对应的限制条件与坐标的交点位置。

左侧斜率绝对值更大，上方斜率绝对值要小才能使得修改这两个方向过给定解时,满足条件.

如果要改下方的限制条件，则至少要有一个限制条件的系数从正改为负。

关键点在于在迭代过程中如何保证 A的改变量是最小的?

1. 一个简单的方法，贪婪算法，但什么时候贪婪算法可以成立？

2. 找最优顶点处的 n个 active 不等式修改为等式，但什么情况下这时的改变量是最小的？

3. bilinear 直接求解，满足一定条件（比如都是增长，对应到图示的方法就是图线下降至过给定解, 此时是凸优化，因而有唯一解），若不满足这些条件，只能求得local optimal.


一般的算法利用迭代规则建立x^{k+1} 和 x^{k} 之间的关系
但由于A维度更改,因而需要先更改A 再由A确定 \lambda
在迭代过程中 |A-A`| 的最小如何保证是一个问题

从可行域的角度来看，最终要使得给定解是最优解，则最优解一定要在目标函数和可行域之间
所以对于

需要注意的是：找到满足要求的 \pi 后，要返回检验是否满足原不等式，不满足的话(某个\pi_i=0)，还需要修改相应的不等式


如果不考虑复杂度，对于任给的一个n维 给定解，需要找到 n 个Ax=b的式子，即至少需要更改n个A，同时如何

************************************
不同的表达形式如何区分？
一般的线性规划模型，Ax=b,但这是加入松弛变量的
如果要给定解，肯定没有松弛变量

根据自己的表达
*******************************************************************
一直想将 所有的范数都囊括进来   或者是 单独分析 不同的范数进行相应的改进策略


*********************************************************
如何根据计算机的计算能力（多长时间？）正确选取计算规模，

一般根据问题来选
*****************************************************

写出算法的流程图
